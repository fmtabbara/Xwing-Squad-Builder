{"version":3,"sources":["context.tsx","theme.tsx","components/logo.tsx","components/page.tsx","hooks/useRequest.tsx","components/text-with-button.tsx","components/faction-icon.tsx","routes/faction-select/index.tsx","components/Icon.tsx","utils.tsx","components/ship-stats.tsx","routes/squad-build/components/ship-card.tsx","hooks/useIsMobile.tsx","routes/squad-build/components/ship-list.tsx","components/update-text.tsx","routes/squad-build/components/pilot-card.tsx","routes/squad-build/components/squad.list.tsx","routes/squad-build/components/builder-card.tsx","routes/squad-build/components/pilot-list.tsx","routes/squad-build/index.tsx","App.js","serviceWorker.js","index.js","assets/SWZ01_logo.png"],"names":["EnumShipSize","EnumActionDifficulty","EnumActionType","EnumShipStatsTypes","EnumFactionXWS","EnumFactionNames","lightTheme","palette","type","typography","fontFamily","darkTheme","ThemeContext","createContext","Theme","children","createTheme","useCallback","theme","createMuiTheme","useState","setTheme","Provider","value","changeTheme","currentTheme","ThemeProvider","containerStyle","width","logoStyle","useStyles","makeStyles","textStyle","textAlign","marginTop","textTransform","fontSize","Logo","classes","useTheme","style","src","logo","alt","Typography","className","color","grey","usePageStyle","root","height","maxHeight","overflow","display","gridTemplateAreas","gridTemplateRows","nav","gridArea","content","padding","spacing","Page","useContext","Paper","square","Grid","container","justify","alignItems","item","IconButton","onClick","toJson","data","json","useRequest","url","opts","setData","isLoading","error","useEffect","fetch","headers","Accept","then","AppContext","AppContextProvider","faction","setFaction","ship","setShip","squad","setSquad","manifestUrls","manifestUrlsLoading","closePilotsList","undefined","showPilotsList","addSquadPilot","pilot","shipXWS","s","removeSquadPilot","pilotName","filter","p","name","resetSquad","TextWithButton","withBlackBg","scumandvillainy","galacticempire","galacticrepublic","FactionIcon","icon","xws","small","blackBg","includes","background","marginRight","borderRadius","FactionSelect","factions","history","useHistory","location","useLocation","handleSelect","push","search","direction","wrap","variant","margin","map","f","index","key","onSelect","Faction","Button","size","startIcon","fontWeight","XIcon","iconSize","split","join","toLowerCase","AbilityIconMap","ability","stringReplace","match","ShipStats","stats","colorMap","agility","success","light","attack","main","hull","shields","info","List","dense","disablePadding","a","ListItem","ListItemIcon","minWidth","arc","ListItemText","useCardStyle","cursor","actions","ShipCard","Card","CardHeader","title","titleTypographyProps","action","CardContent","pilots","shipAbility","text","flexWrap","overflowX","useIsMobile","useMediaQuery","Transition","React","forwardRef","props","ref","Slide","useDialogStyles","justifyContent","ShipList","open","onClose","isMobile","ships","setShips","setShipsLoading","find","u","promises","Promise","all","rs","r","d","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","maxWidth","fullWidth","fullScreen","DialogTitle","DialogContent","dividers","xs","DialogActions","UpdateText","onUpdate","setValue","ClickAwayListener","onClickAway","OutlinedInput","autoFocus","onChange","target","onKeyDown","endAdornment","headerStyle","initiativeStyle","costStyle","marginLeft","PilotCard","onAddPilot","onRemovePilot","clsx","cost","component","avatar","initiative","subheader","caption","slots","SquadList","sm","useBuilderCardStyle","overflowY","header","position","top","paper","BuilderCard","squadPoints","reduce","c","length","Alert","severity","BuilderCardHeader","squadName","setSquadName","showSquadNameInput","setShowSquadNameInput","currentSquadName","updatedValue","toUpperCase","PilotList","shipWXS","closeShipList","partialAddPilot","disableTypography","SquadBuild","displayShipList","setDisplayShipList","pathname","marginBottom","to","App","path","Boolean","window","hostname","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.b6c58952.chunk.js","sourcesContent":["import React, { createContext, SetStateAction, useState } from \"react\"\nimport { useRequest } from \"./hooks/useRequest\"\n\nenum EnumShipSize {\n  Small = \"Small\",\n  Medium = \"Medium\",\n  Large = \"Large\",\n}\n\nenum EnumActionDifficulty {\n  White = \"White\",\n  Red = \"Red\",\n}\n\nenum EnumActionType {\n  Focus = \"Focus\",\n  Reinforce = \"Reinforce\",\n  Lock = \"Lock\",\n  \"Barrel Roll\" = \"Barrel Roll\",\n  Evade = \"Evade\",\n  Cloak = \"Cloak\",\n  Coordinate = \"Coordinate\",\n  Calculate = \"Calculate\",\n  Jam = \"Jam\",\n  Reload = \"Reload\",\n  Slam = \"Slam\",\n  \"Rotate Arc\" = \"Rotate Arc\",\n}\n\nexport enum EnumShipStatsTypes {\n  attack = \"attack\",\n  agility = \"agility\",\n  hull = \"hull\",\n  shields = \"shields\",\n}\n\nexport type TShip = {\n  actions: Array<{ difficulty: EnumActionDifficulty; type: EnumActionType }>\n  faction: EnumFactionNames\n  ffg: number\n  icon: string\n  name: string\n  pilots: Array<TPilot>\n  size: EnumShipSize\n  stats: Array<{\n    arc?: string\n    type: EnumShipStatsTypes\n    value: number\n  }>\n  xws: string\n}\n\nexport type TPilot = {\n  artwork: string\n  ability: string\n  caption: string\n  cost: number | undefined\n  ffg: number\n  hyperspace: boolean\n  image: string\n  initiative: number\n  limited: number\n  name: string\n  shipAbility: { name: string; text: string } | undefined\n  slots?: string[]\n  xws: string\n  shipXWS?: string\n}\n\nexport type TFaction = {\n  name: string\n  ffg: number\n  icon: string\n  xws: EnumFactionXWS\n}\n\nexport enum EnumFactionXWS {\n  rebelalliance = \"rebelalliance\",\n  galacticempire = \"galacticempire\",\n  scumandvillainy = \"scumandvillainy\",\n  resistance = \"resistance\",\n  firstorder = \"firstorder\",\n  galacticrepublic = \"galacticrepublic\",\n  separatistalliance = \"separatistalliance\",\n}\n\nenum EnumFactionNames {\n  \"Rebel Alliance\" = \"Rebel Alliance\",\n  \"Galactic Empire\" = \"Galactic Empire\",\n  \"Scum and Villainy\" = \"Scum and Villainy\",\n  \"Resistance\" = \"Resistance\",\n  \"First Order\" = \"First Order\",\n  \"Galactic Republic\" = \"Galactic Republic\",\n  \"Separatist Alliance\" = \"Separatist Alliance\",\n}\n\ninterface IAppContext {\n  manifestUrlsLoading: boolean\n  manifestUrls: any\n  faction: TFaction | undefined\n  ship: any\n  squad: TPilot[]\n  setFaction: React.Dispatch<SetStateAction<TFaction | undefined>>\n  showPilotsList: (ship: any) => void\n  closePilotsList: () => void\n  addSquadPilot: (pilot: TPilot, shipXWS: TShip[\"xws\"]) => void\n  removeSquadPilot: (pilotName: TPilot[\"name\"]) => void\n  resetSquad: () => void\n}\n\nexport const AppContext = createContext({} as IAppContext)\n\nexport const AppContextProvider = ({\n  children,\n}: {\n  children: React.ReactNode\n}) => {\n  const [faction, setFaction] = useState<TFaction | undefined>()\n  const [ship, setShip] = useState<TShip>()\n  const [squad, setSquad] = useState<TPilot[]>([])\n\n  const { data: manifestUrls, isLoading: manifestUrlsLoading } = useRequest(\n    \"manifest.json\"\n  )\n\n  const showPilotsList = (ship: any) => setShip(ship)\n  const closePilotsList = () => setShip(undefined)\n\n  const addSquadPilot = (pilot: TPilot, shipXWS: TShip[\"xws\"]) => {\n    setSquad((s) => [...s, { ...pilot, shipXWS }])\n    closePilotsList()\n  }\n\n  const removeSquadPilot = (pilotName: TPilot[\"name\"]) =>\n    setSquad((s) => s.filter((p) => p.name !== pilotName))\n\n  const resetSquad = () => setSquad([])\n\n  return (\n    <AppContext.Provider\n      value={{\n        faction,\n        ship,\n        squad,\n        manifestUrls,\n        manifestUrlsLoading,\n        setFaction,\n        showPilotsList,\n        closePilotsList,\n        addSquadPilot,\n        removeSquadPilot,\n        resetSquad,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n","import React, { createContext, useCallback, useState } from \"react\"\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  ThemeOptions,\n} from \"@material-ui/core/styles\"\n\nlet lightTheme: ThemeOptions = {\n  palette: {\n    type: \"light\",\n  },\n  typography: {\n    fontFamily: \"'Kanit', consolas\",\n  },\n}\n\nconst darkTheme: ThemeOptions = {\n  palette: {\n    type: \"dark\",\n  },\n  typography: {\n    fontFamily: \"'Kanit', consolas\",\n  },\n}\n\ninterface IThemeProviderProps {\n  currentTheme: string\n  changeTheme: () => void\n}\n\nexport const ThemeContext = createContext({} as IThemeProviderProps)\n\nexport const Theme = ({ children }: { children: React.ReactNode }) => {\n  const createTheme = useCallback(\n    (theme: ThemeOptions) => createMuiTheme(theme),\n    []\n  )\n\n  const [theme, setTheme] = useState(createTheme(darkTheme))\n  const changeTheme = () => {\n    theme.palette.type === \"dark\"\n      ? setTheme(createTheme(lightTheme))\n      : setTheme(createTheme(darkTheme))\n  }\n\n  return (\n    <ThemeContext.Provider\n      value={{ changeTheme, currentTheme: theme.palette.type }}\n    >\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n","import React from \"react\"\nimport logo from \"../assets/SWZ01_logo.png\"\nimport { Typography, Theme } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useTheme } from \"@material-ui/styles\"\n\nconst containerStyle = {\n  width: 125,\n}\n\nconst logoStyle = {\n  width: \"100%\",\n}\n\nconst useStyles = makeStyles({\n  textStyle: {\n    textAlign: \"right\",\n    marginTop: -10,\n    textTransform: \"uppercase\",\n    fontSize: 9,\n  },\n})\n\nexport const Logo = ({ currentTheme }: { currentTheme: string }) => {\n  const classes = useStyles()\n  const theme: Theme = useTheme()\n  return (\n    <div style={containerStyle}>\n      <img src={logo} alt=\"main-logo\" style={logoStyle} />\n      <Typography\n        className={classes.textStyle}\n        style={{\n          color: currentTheme === \"light\" ? theme.palette.grey[900] : \"white\",\n        }}\n      >\n        Second Edition\n      </Typography>\n    </div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { Grid, IconButton, makeStyles, Paper } from \"@material-ui/core\"\nimport LightMode from \"@material-ui/icons/Brightness7\"\nimport DarkMode from \"@material-ui/icons/Brightness4\"\nimport { ThemeContext } from \"../theme\"\nimport { Logo } from \"./logo\"\n\nconst navHeight = 75\n\nconst usePageStyle = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    maxHeight: \"100vh\",\n    overflow: \"hidden\",\n    display: \"grid\",\n    gridTemplateAreas: `\n      \"nav\"\n      \"content\"\n    `,\n    gridTemplateRows: `${navHeight}px auto`,\n  },\n  nav: {\n    gridArea: \"nav\",\n  },\n  content: {\n    gridArea: \"content\",\n    height: `calc(100vh - ${navHeight}px)`,\n    overflow: \"hidden\",\n    padding: theme.spacing(2),\n  },\n}))\n\nexport const Page = ({ children }: { children: any }) => {\n  const { changeTheme, currentTheme } = useContext(ThemeContext)\n  const classes = usePageStyle()\n  return (\n    <Paper square>\n      <div className={classes.root}>\n        <div className={classes.nav}>\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ padding: 16 }}\n          >\n            <Grid item>\n              <Logo currentTheme={currentTheme} />\n            </Grid>\n            <Grid item>\n              <IconButton onClick={changeTheme}>\n                {currentTheme === \"dark\" ? <LightMode /> : <DarkMode />}\n              </IconButton>\n            </Grid>\n          </Grid>\n        </div>\n        <div className={classes.content}>{children}</div>\n      </div>\n    </Paper>\n  )\n}\n","import { useEffect, useState } from \"react\"\n\nconst toJson = (data: any) => data.json()\n\nexport const useRequest = (url: string, opts?: {}) => {\n  const [data, setData] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    fetch(url, { headers: { Accept: \"application/json\" } })\n      .then(toJson)\n      .then((data) => {\n        setData(data)\n      })\n  }, [url])\n\n  return { data, isLoading, error }\n}\n","import React from \"react\";\n\nexport const TextWithButton = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>{children}</div>\n  );\n};\n","import { Typography } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { AppContext, EnumFactionXWS } from \"../context\";\nimport { TextWithButton } from \"./text-with-button\";\n\nconst withBlackBg = [\n  EnumFactionXWS.scumandvillainy,\n  EnumFactionXWS.galacticempire,\n  EnumFactionXWS.galacticrepublic,\n];\n\nexport const FactionIcon = ({\n  icon,\n  xws,\n  small,\n}: {\n  icon: string;\n  xws: EnumFactionXWS;\n  small?: boolean;\n}) => {\n  const blackBg = withBlackBg.includes(xws);\n  return (\n    <img\n      src={icon}\n      alt=\"faction-icon\"\n      style={{\n        width: small ? 25 : 35,\n        background: blackBg ? \"black\" : \"#ddd\",\n        marginRight: 8,\n        padding: 4,\n        borderRadius: 30,\n      }}\n    />\n  );\n};\n\nexport const FactionLabel = ({ small }: { small?: boolean }) => {\n  const { faction } = useContext(AppContext);\n  if (faction) {\n    return (\n      <TextWithButton>\n        <FactionIcon icon={faction.icon} xws={faction.xws} small={small} />\n        <Typography\n          component=\"div\"\n          style={{\n            fontWeight: small ? 500 : 700,\n          }}\n        >\n          {faction.name.toUpperCase()}\n        </Typography>\n      </TextWithButton>\n    );\n  }\n  return <></>;\n};\n","import React, { useContext } from \"react\"\nimport { Page } from \"../../components/page\"\nimport { Button, Grid, Typography } from \"@material-ui/core\"\nimport { useRequest } from \"../../hooks/useRequest\"\nimport { AppContext, TFaction } from \"../../context\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { FactionIcon } from \"../../components/faction-icon\"\n\nexport const FactionSelect = () => {\n  const {\n    data: factions = [],\n    isLoading,\n  }: { data: TFaction[] | undefined; isLoading: boolean } = useRequest(\n    \"data/factions/factions.json\"\n  )\n\n  const history = useHistory()\n  const location = useLocation()\n\n  const { setFaction } = useContext(AppContext)\n\n  const handleSelect = (faction: TFaction) => {\n    setFaction(faction)\n    history.push(`${location.search}/squad-build`)\n  }\n\n  return (\n    <Page>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n        style={{ height: \"100%\", overflow: \"auto\" }}\n      >\n        <Grid item>\n          <Typography\n            variant=\"h4\"\n            style={{ textTransform: \"uppercase\", margin: 36 }}\n          >\n            Faction Select\n          </Typography>\n        </Grid>\n        {!isLoading &&\n          factions.map((f, index: number) => (\n            <Grid item key={index}>\n              <Faction faction={f} onSelect={handleSelect} />\n            </Grid>\n          ))}\n      </Grid>\n    </Page>\n  )\n}\n\nconst Faction = ({\n  faction,\n  onSelect,\n}: {\n  faction: TFaction\n  onSelect: (faction: TFaction) => void\n}) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"text\"\n      startIcon={<FactionIcon icon={faction.icon} xws={faction.xws} small />}\n      onClick={() => onSelect(faction)}\n      style={{ padding: 16 }}\n    >\n      <Typography variant=\"h6\" style={{ fontWeight: 700 }}>\n        {faction.name}\n      </Typography>\n    </Button>\n  )\n}\n","import React from \"react\"\nimport \"../assets/icons/xwing-miniatures.css\"\n\nexport const XIcon = ({\n  type,\n  icon,\n  size,\n  color,\n  style = {},\n}: {\n  type: \"ship\" | \"font\"\n  icon: string\n  size?: \"md\" | \"lg\"\n  color?: string\n  style?: {}\n}) => {\n  const iconSize = size === \"md\" ? \"3.5em\" : size === \"lg\" ? \"5em\" : \"1.25em\"\n  return (\n    <i\n      style={{ ...style, fontSize: iconSize, color }}\n      className={`xwing-miniatures-${type} xwing-miniatures-${type}-${icon\n        .split(\" \")\n        .join(\"\")\n        .toLowerCase()}`}\n    ></i>\n  )\n}\n","import React from \"react\"\nimport stringReplace from \"react-string-replace\"\nimport { XIcon } from \"./components/Icon\"\n\nexport const AbilityIconMap = (ability?: string) =>\n  ability &&\n  stringReplace(ability, /\\[(.*?)\\]/, (match) => {\n    return <XIcon type=\"font\" icon={`${match}`} />\n  })\n","import {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Theme,\n} from \"@material-ui/core\"\nimport { useTheme } from \"@material-ui/styles\"\nimport React from \"react\"\nimport { EnumShipStatsTypes, TShip } from \"../context\"\nimport { XIcon } from \"./Icon\"\n\nexport const ShipStats = ({ stats }: { stats: TShip[\"stats\"] }) => {\n  const theme: Theme = useTheme()\n\n  const colorMap: any = {\n    [EnumShipStatsTypes.agility]: theme.palette.success.light,\n    [EnumShipStatsTypes.attack]: theme.palette.error.main,\n    [EnumShipStatsTypes.hull]: \"#d4d465\",\n    [EnumShipStatsTypes.shields]: theme.palette.info.main,\n  }\n\n  return (\n    <List dense disablePadding style={{ display: \"flex\" }}>\n      {stats.map((a) => (\n        <ListItem style={{ padding: 0, margin: theme.spacing(0, 0.5) }}>\n          <ListItemIcon style={{ margin: theme.spacing(0, 0.5), minWidth: 0 }}>\n            <XIcon\n              type=\"font\"\n              icon={`${a.arc ? a.arc : a.type}`}\n              color={colorMap[a.type]}\n            />\n          </ListItemIcon>\n          <ListItemText style={{ color: colorMap[a.type] }}>\n            {a.value}\n          </ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n","import React, { useContext } from \"react\"\n\nimport { AppContext, TShip } from \"../../../context\"\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\"\nimport { XIcon } from \"../../../components/Icon\"\nimport { AbilityIconMap } from \"../../../utils\"\nimport { ShipStats } from \"../../../components/ship-stats\"\n\nconst useCardStyle = makeStyles((theme) => ({\n  root: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  actions: {\n    margin: theme.spacing(0, 0.5),\n  },\n}))\n\nexport const ShipCard = ({ ship }: { ship: TShip }) => {\n  const classes = useCardStyle()\n\n  const { showPilotsList } = useContext(AppContext)\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      onClick={() => {\n        showPilotsList(ship)\n      }}\n    >\n      <CardHeader\n        title={ship.name}\n        titleTypographyProps={{\n          variant: \"h6\",\n          style: {\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n          },\n        }}\n        action={<ShipStats stats={ship.stats} />}\n      />\n      <CardContent>\n        <div>\n          <XIcon type=\"ship\" icon={ship.xws} size=\"lg\" />\n        </div>\n        <div>\n          <Typography variant=\"subtitle1\">\n            {ship.pilots[0].shipAbility?.name}\n          </Typography>\n          {ship.pilots[0].shipAbility && (\n            <Typography variant=\"caption\">\n              {AbilityIconMap(ship.pilots[0].shipAbility?.text)}\n            </Typography>\n          )}\n        </div>\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\", overflowX: \"auto\" }}>\n          {ship.actions.map((a) => (\n            <div className={classes.actions}>\n              <XIcon type=\"font\" icon={a.type} />\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import { useMediaQuery } from \"@material-ui/core\"\n\nexport const useIsMobile = () => useMediaQuery(\"(max-width:770px)\")\n","import React, { useContext, useEffect, useState } from \"react\"\n\nimport Slide from \"@material-ui/core/Slide\"\nimport { TransitionProps } from \"@material-ui/core/transitions\"\n\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Grid,\n  Theme,\n  Typography,\n} from \"@material-ui/core\"\n\nimport { makeStyles } from \"@material-ui/styles\"\nimport { AppContext, TShip } from \"../../../context\"\nimport { ShipCard } from \"./ship-card\"\nimport { useIsMobile } from \"../../../hooks/useIsMobile\"\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"down\" ref={ref} {...props} />\n})\n\nconst useDialogStyles = makeStyles((theme: Theme) => ({\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(3),\n    fontWeight: 900,\n    textTransform: \"uppercase\",\n  },\n}))\n\nexport const ShipList = ({\n  open,\n  onClose,\n}: {\n  open: boolean\n  onClose: () => void\n}) => {\n  const classes = useDialogStyles()\n  const isMobile = useIsMobile()\n\n  const [ships, setShips] = useState<TShip[]>([])\n  const [shipsLoading, setShipsLoading] = useState(true)\n\n  const { manifestUrls, faction } = useContext(AppContext)\n\n  const pilots =\n    manifestUrls?.pilots.find((u: any) => u.faction === faction?.xws) || []\n\n  useEffect(() => {\n    const promises = pilots.ships.map((s: string) =>\n      fetch(s, { headers: { Accept: \"application/json\" } })\n    )\n    Promise.all(promises).then((rs: any) => {\n      const data = rs.map((r: any) => r.json().then((r: any) => r))\n      Promise.all(data).then((d: any) => {\n        setShips(d)\n        setShipsLoading(false)\n      })\n    })\n  }, [pilots])\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      maxWidth=\"lg\"\n      fullWidth\n      fullScreen={isMobile}\n    >\n      <DialogTitle className={classes.title}>Select Ship</DialogTitle>\n      <DialogContent dividers>\n        <Grid container spacing={2} direction=\"column\">\n          {ships.map((s) => {\n            return (\n              <Grid item xs={12}>\n                <ShipCard ship={s} />\n              </Grid>\n            )\n          })}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"text\" onClick={onClose}>\n          CLOSE\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from \"react\"\nimport { ClickAwayListener, IconButton, OutlinedInput } from \"@material-ui/core\"\nimport CheckIcon from \"@material-ui/icons/Check\"\n\nexport const UpdateText = ({\n  text,\n  onClose,\n  onUpdate,\n}: {\n  text: string\n  onClose: (currentText: string) => void\n  onUpdate: (updatedText: string) => void\n}) => {\n  const [value, setValue] = useState(text)\n\n  return (\n    <ClickAwayListener onClickAway={() => onClose(text)}>\n      <OutlinedInput\n        fullWidth\n        autoFocus\n        value={value}\n        onChange={({ target }) => {\n          setValue(target.value)\n        }}\n        onKeyDown={({ key }) => {\n          if (key.toLowerCase() === \"enter\") {\n            onUpdate(value)\n          }\n          if (key.toLowerCase() === \"escape\") {\n            onClose(text)\n          }\n        }}\n        endAdornment={\n          <IconButton color=\"primary\" onClick={() => onUpdate(value)}>\n            <CheckIcon />\n          </IconButton>\n        }\n      />\n    </ClickAwayListener>\n  )\n}\n","import React from \"react\"\nimport clsx from \"clsx\"\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\"\nimport { TPilot } from \"../../../context\"\nimport { XIcon } from \"../../../components/Icon\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport { AbilityIconMap } from \"../../../utils\"\n\nconst useCardStyle = makeStyles((theme) => ({\n  root: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  headerStyle: {\n    alignItems: \"flex-start\",\n  },\n  initiativeStyle: {\n    color: \"orange\",\n    fontWeight: 900,\n  },\n  costStyle: {\n    fontWeight: 900,\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nexport const PilotCard = ({\n  pilot,\n  onAddPilot,\n  onRemovePilot,\n}: {\n  pilot: TPilot\n  onAddPilot?: (pilot: TPilot) => void\n  onRemovePilot?: (pilot: string) => void\n}) => {\n  const classes = useCardStyle()\n\n  return (\n    <Card\n      variant=\"outlined\"\n      onClick={() => onAddPilot?.(pilot)}\n      className={clsx({ [classes.root]: onAddPilot })}\n    >\n      <CardHeader\n        title={\n          <>\n            {pilot.name}\n            {pilot.cost && (\n              <Typography\n                color=\"primary\"\n                variant=\"body1\"\n                component=\"span\"\n                className={classes.costStyle}\n              >\n                {pilot.cost}\n              </Typography>\n            )}\n          </>\n        }\n        className={classes.headerStyle}\n        avatar={\n          <Typography variant=\"h6\" className={classes.initiativeStyle}>\n            {pilot.initiative}\n          </Typography>\n        }\n        titleTypographyProps={{\n          variant: \"h6\",\n          style: {\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n          },\n        }}\n        subheader={pilot.caption}\n        action={\n          onRemovePilot && (\n            <IconButton onClick={() => onRemovePilot(pilot.name)}>\n              <CloseIcon />\n            </IconButton>\n          )\n        }\n      />\n      <CardContent>\n        {pilot.shipXWS && (\n          <div>\n            <XIcon type=\"ship\" icon={pilot.shipXWS} size=\"lg\" />\n          </div>\n        )}\n        <div>\n          <Typography variant=\"subtitle1\">{pilot.shipAbility?.name}</Typography>\n          <Typography variant=\"caption\">\n            {AbilityIconMap(pilot.shipAbility?.text)}\n          </Typography>\n        </div>\n        <div>\n          <Typography variant=\"caption\">\n            {AbilityIconMap(pilot.ability)}\n          </Typography>\n        </div>\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\", overflowX: \"auto\" }}>\n          {pilot.slots?.map((s) => (\n            <XIcon type=\"font\" icon={s.split(\" \").join(\"\").toLowerCase()} />\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { PilotCard } from \"./pilot-card\"\nimport { AppContext, TPilot } from \"../../../context\"\n\nexport const SquadList = ({ squad }: { squad: TPilot[] }) => {\n  const { removeSquadPilot } = useContext(AppContext)\n  return (\n    <Grid container spacing={2}>\n      {squad.map((s) => (\n        <Grid item sm={12}>\n          <PilotCard pilot={s} onRemovePilot={removeSquadPilot} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n","import React, { useContext, useState } from \"react\"\nimport {\n  Typography,\n  IconButton,\n  Card,\n  CardHeader,\n  CardContent,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport { TextWithButton } from \"../../../components/text-with-button\"\nimport { UpdateText } from \"../../../components/update-text\"\nimport { AppContext } from \"../../../context\"\nimport { SquadList } from \"./squad.list\"\nimport { Alert } from \"@material-ui/lab\"\nimport { FactionIcon } from \"../../../components/faction-icon\"\n\nconst useBuilderCardStyle = makeStyles((theme: Theme) => ({\n  root: {\n    width: \"100%\",\n    maxHeight: \"100%\",\n    overflow: \"auto\",\n  },\n  content: {\n    overflowY: \"auto\",\n  },\n  header: {\n    padding: 0,\n    position: \"sticky\",\n    top: 0,\n    background: theme.palette.background.paper,\n  },\n}))\n\nexport const BuilderCard = () => {\n  const { squad } = useContext(AppContext)\n  const classes = useBuilderCardStyle()\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardHeader\n        className={classes.header}\n        title={\n          <BuilderCardHeader\n            squadPoints={squad\n              .map((s) => s.cost || 0)\n              .reduce((a, c) => a + c, 0)}\n          />\n        }\n      />\n      <CardContent className={classes.content}>\n        {squad.length === 0 && (\n          <Alert style={{ margin: 8 }} severity=\"info\">\n            No squad pilots selected\n          </Alert>\n        )}\n        <SquadList squad={squad} />\n      </CardContent>\n    </Card>\n  )\n}\n\nconst BuilderCardHeader = ({ squadPoints }: { squadPoints: number }) => {\n  const total = 200\n  const [squadName, setSquadName] = useState(\"Squad Name\")\n  const [showSquadNameInput, setShowSquadNameInput] = useState(false)\n  const { faction } = useContext(AppContext)\n\n  return (\n    <div style={{ padding: 16 }}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <FactionIcon icon={faction!.icon} xws={faction!.xws} small />\n        {showSquadNameInput ? (\n          <UpdateText\n            text={squadName}\n            onClose={(currentSquadName) => {\n              setSquadName(currentSquadName)\n              setShowSquadNameInput(false)\n            }}\n            onUpdate={(updatedValue) => {\n              setSquadName(updatedValue)\n              setShowSquadNameInput(false)\n            }}\n          />\n        ) : (\n          <TextWithButton>\n            <Typography variant=\"h6\">{squadName?.toUpperCase()}</Typography>\n            <IconButton onClick={() => setShowSquadNameInput(true)}>\n              <EditIcon />\n            </IconButton>\n          </TextWithButton>\n        )}\n      </div>\n\n      <Typography variant=\"body1\" component=\"span\" color=\"primary\">\n        <span\n          style={{\n            fontWeight: 700,\n            color: squadPoints >= total ? \"red\" : undefined,\n          }}\n        >\n          {squadPoints}/{total}\n        </span>\n      </Typography>\n    </div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport Slide from \"@material-ui/core/Slide\"\nimport { TransitionProps } from \"@material-ui/core/transitions\"\nimport { AppContext, TPilot, TShip } from \"../../../context\"\nimport { PilotCard } from \"./pilot-card\"\nimport {\n  Button,\n  DialogActions,\n  Grid,\n  Theme,\n  Typography,\n} from \"@material-ui/core\"\nimport { XIcon } from \"../../../components/Icon\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport { useIsMobile } from \"../../../hooks/useIsMobile\"\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"down\" ref={ref} {...props} />\n})\n\nconst useDialogStyles = makeStyles((theme: Theme) => ({\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 3),\n  },\n}))\n\nexport const PilotList = ({\n  ship,\n  open,\n  closeShipList,\n}: {\n  ship: TShip | undefined\n  open: boolean\n  closeShipList: () => void\n}) => {\n  const classes = useDialogStyles()\n  const isMobile = useIsMobile()\n\n  const { addSquadPilot, closePilotsList } = useContext(AppContext)\n\n  const onAddPilot = (shipWXS: TShip[\"xws\"]) => (pilot: TPilot) => {\n    addSquadPilot(pilot, shipWXS)\n    closeShipList()\n  }\n  const partialAddPilot = onAddPilot(ship?.xws!)\n\n  return (\n    <Dialog\n      open={open}\n      onClose={closePilotsList}\n      TransitionComponent={Transition}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      maxWidth=\"md\"\n      fullWidth\n      fullScreen={isMobile}\n    >\n      <DialogTitle disableTypography className={classes.title}>\n        <Typography\n          style={{\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n            marginRight: 8,\n          }}\n        >\n          {ship?.name}\n        </Typography>\n        <XIcon type=\"ship\" icon={ship?.xws || \"\"} size=\"lg\" />\n      </DialogTitle>\n      <DialogContent dividers>\n        <Grid container spacing={2} direction=\"column\">\n          {ship?.pilots.map((p) => (\n            <Grid item xs={12}>\n              <PilotCard pilot={p} onAddPilot={partialAddPilot} />\n            </Grid>\n          ))}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closePilotsList}>BACK</Button>\n        <Button\n          onClick={() => {\n            closePilotsList()\n            closeShipList()\n          }}\n          variant=\"text\"\n        >\n          CLOSE\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useContext, useState } from \"react\"\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\"\nimport { Button, Grid, Theme } from \"@material-ui/core\"\nimport { ShipList } from \"./components/ship-list\"\nimport { Page } from \"../../components/page\"\nimport { AppContext } from \"../../context\"\nimport { BuilderCard } from \"./components/builder-card\"\nimport { PilotList } from \"./components/pilot-list\"\nimport { useTheme } from \"@material-ui/styles\"\n\nexport const SquadBuild = () => {\n  const { faction, ship, resetSquad } = useContext(AppContext)\n\n  const location = useLocation()\n  const history = useHistory()\n\n  const theme: Theme = useTheme()\n\n  const [displayShipList, setDisplayShipList] = useState(false)\n\n  if (!faction && location.pathname !== \"/faction-select\") {\n    return <Redirect to=\"/faction-select\" />\n  }\n\n  if (faction) {\n    return (\n      <Page>\n        <ShipList\n          open={displayShipList}\n          onClose={() => setDisplayShipList(false)}\n        />\n        <PilotList\n          open={ship ? true : false}\n          ship={ship}\n          closeShipList={() => setDisplayShipList(false)}\n        />\n\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"flex-start\"\n          wrap=\"nowrap\"\n          style={{ height: \"100%\" }}\n        >\n          <Grid item>\n            <div style={{ display: \"flex\", marginBottom: theme.spacing(0.5) }}>\n              <Button\n                onClick={() => {\n                  resetSquad()\n                  history.push(\"/faction-select\")\n                }}\n              >\n                Factions\n              </Button>\n              <Button onClick={() => setDisplayShipList(true)}>Ships</Button>\n            </div>\n          </Grid>\n          <BuilderCard />\n        </Grid>\n      </Page>\n    )\n  }\n}\n","import React from \"react\"\nimport { Redirect, Route, Switch } from \"react-router-dom\"\nimport CssBaseLine from \"@material-ui/core/CssBaseline\"\nimport { Theme } from \"./theme\"\nimport { FactionSelect } from \"./routes/faction-select\"\nimport { SquadBuild } from \"./routes/squad-build\"\nimport { AppContextProvider } from \"./context\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <>\n      <CssBaseLine />\n      <AppContextProvider>\n        <Theme>\n          <Switch>\n            <Route path=\"/faction-select\">\n              <FactionSelect />\n            </Route>\n            <Route path=\"/squad-build\">\n              <SquadBuild />\n            </Route>\n            <Route path=\"/\">\n              <Redirect to=\"/faction-select\" />\n            </Route>\n          </Switch>\n        </Theme>\n      </AppContextProvider>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/Xwing-Squad-Builder\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/SWZ01_logo.19be28cc.png\";"],"sourceRoot":""}