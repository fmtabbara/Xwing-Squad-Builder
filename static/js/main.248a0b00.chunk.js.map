{"version":3,"sources":["context.tsx","theme.tsx","components/logo.tsx","components/page.tsx","hooks/useRequest.tsx","components/text-with-button.tsx","components/faction-icon.tsx","routes/faction-select/index.tsx","components/Icon.tsx","routes/squad-build/components/ship-list.tsx","components/update-text.tsx","routes/squad-build/components/pilot-card.tsx","routes/squad-build/components/squad.list.tsx","routes/squad-build/components/builder-card.tsx","routes/squad-build/components/pilot-list.tsx","components/side-bar.tsx","routes/squad-build/index.tsx","hooks/useIsMobile.tsx","App.js","serviceWorker.js","index.js","assets/SWZ01_logo.png"],"names":["EnumShipSize","EnumActionDifficulty","EnumActionType","EnumFactionXWS","EnumFactionNames","lightTheme","palette","type","typography","fontFamily","darkTheme","ThemeContext","createContext","Theme","children","createTheme","useCallback","theme","createMuiTheme","useState","setTheme","Provider","value","changeTheme","currentTheme","ThemeProvider","containerStyle","width","logoStyle","useStyles","makeStyles","textStyle","color","grey","textAlign","marginTop","textTransform","fontSize","Logo","classes","style","src","logo","alt","Typography","className","Page","useContext","Paper","height","Grid","container","direction","item","justify","padding","IconButton","onClick","toJson","data","json","useRequest","url","opts","setData","isLoading","error","useEffect","fetch","headers","Accept","then","AppContext","AppContextProvider","faction","setFaction","ship","setShip","squad","setSquad","manifestUrls","manifestUrlsLoading","closePilotsList","undefined","showPilotsList","addSquadPilot","pilot","shipXWS","s","removeSquadPilot","pilotName","filter","p","name","resetSquad","TextWithButton","display","alignItems","withBlackBg","scumandvillainy","galacticempire","galacticrepublic","FactionIcon","icon","xws","small","blackBg","includes","background","marginRight","borderRadius","FactionSelect","factions","history","useHistory","location","useLocation","handleSelect","push","search","spacing","map","f","index","key","onSelect","Faction","Button","size","variant","startIcon","fontWeight","XIcon","iconSize","toLowerCase","root","backgroundColor","paper","ShipList","onShowList","ships","setShips","shipsLoading","setShipsLoading","pilots","find","u","promises","Promise","all","rs","r","d","length","List","maxHeight","overflowX","dense","ListItem","button","ListItemIcon","ListItemText","primary","toUpperCase","UpdateText","text","onClose","onUpdate","setValue","ClickAwayListener","onClickAway","OutlinedInput","fullWidth","autoFocus","onChange","target","onKeyDown","endAdornment","useCardStyle","cursor","headerStyle","initiativeStyle","costStyle","marginLeft","PilotCard","ability","onAddPilot","onRemovePilot","Card","clsx","CardHeader","title","cost","component","avatar","initiative","titleTypographyProps","subheader","caption","action","CardContent","stringReplace","match","flexWrap","slots","SquadList","sm","useBuilderCardStyle","overflowY","header","BuilderCard","squadPoints","reduce","a","c","Alert","margin","severity","BuilderCardHeader","squadName","setSquadName","showSquadNameInput","setShowSquadNameInput","currentSquadName","updatedValue","Transition","React","forwardRef","props","ref","Slide","useDialogStyles","justifyContent","PilotList","shipWXS","open","partialAddPilot","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","maxWidth","DialogTitle","disableTypography","DialogContent","dividers","xs","DialogActions","SideBar","onOpen","useTheme","SwipeableDrawer","ModalProps","anchor","borderBottom","SquadBuild","isMobile","useMediaQuery","showSideBar","setShowSideBar","handleCloseSideBar","pathname","onAdd","wrap","minWidth","to","App","path","Boolean","window","hostname","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.248a0b00.chunk.js","sourcesContent":["import React, { createContext, SetStateAction, useState } from \"react\"\nimport { useRequest } from \"./hooks/useRequest\"\n\nenum EnumShipSize {\n  Small = \"Small\",\n  Medium = \"Medium\",\n  Large = \"Large\",\n}\n\nenum EnumActionDifficulty {\n  White = \"White\",\n  Red = \"Red\",\n}\n\nenum EnumActionType {\n  Focus = \"Focus\",\n  Reinforce = \"Reinforce\",\n  Lock = \"Lock\",\n  \"Barrel Roll\" = \"Barrel Roll\",\n  Evade = \"Evade\",\n  Cloak = \"Cloak\",\n  Coordinate = \"Coordinate\",\n  Calculate = \"Calculate\",\n  Jam = \"Jam\",\n  Reload = \"Reload\",\n  Slam = \"Slam\",\n  \"Rotate Arc\" = \"Rotate Arc\",\n}\n\nexport type TShip = {\n  actions: Array<{ difficulty: EnumActionDifficulty; type: EnumActionType }>\n  faction: EnumFactionNames\n  ffg: number\n  icon: string\n  name: string\n  pilots: Array<TPilot>\n  size: EnumShipSize\n  stats: any[] // Needs populating\n  xws: string\n}\n\nexport type TPilot = {\n  artwork: string\n  ability: string\n  caption: string\n  cost: number | undefined\n  ffg: number\n  hyperspace: boolean\n  image: string\n  initiative: number\n  limited: number\n  name: string\n  shipAbility: { name: string; text: string } | undefined\n  slots?: string[]\n  xws: string\n  shipXWS?: string\n}\n\nexport type TFaction = {\n  name: string\n  ffg: number\n  icon: string\n  xws: EnumFactionXWS\n}\n\nexport enum EnumFactionXWS {\n  rebelalliance = \"rebelalliance\",\n  galacticempire = \"galacticempire\",\n  scumandvillainy = \"scumandvillainy\",\n  resistance = \"resistance\",\n  firstorder = \"firstorder\",\n  galacticrepublic = \"galacticrepublic\",\n  separatistalliance = \"separatistalliance\",\n}\n\nenum EnumFactionNames {\n  \"Rebel Alliance\" = \"Rebel Alliance\",\n  \"Galactic Empire\" = \"Galactic Empire\",\n  \"Scum and Villainy\" = \"Scum and Villainy\",\n  \"Resistance\" = \"Resistance\",\n  \"First Order\" = \"First Order\",\n  \"Galactic Republic\" = \"Galactic Republic\",\n  \"Separatist Alliance\" = \"Separatist Alliance\",\n}\n\ninterface IAppContext {\n  manifestUrlsLoading: boolean\n  manifestUrls: any\n  faction: TFaction | undefined\n  ship: any\n  squad: TPilot[]\n  setFaction: React.Dispatch<SetStateAction<TFaction | undefined>>\n  showPilotsList: (ship: any) => void\n  closePilotsList: () => void\n  addSquadPilot: (pilot: TPilot, shipXWS: TShip[\"xws\"]) => void\n  removeSquadPilot: (pilotName: TPilot[\"name\"]) => void\n  resetSquad: () => void\n}\n\nexport const AppContext = createContext({} as IAppContext)\n\nexport const AppContextProvider = ({\n  children,\n}: {\n  children: React.ReactNode\n}) => {\n  const [faction, setFaction] = useState<TFaction | undefined>()\n  const [ship, setShip] = useState<TShip>()\n  const [squad, setSquad] = useState<TPilot[]>([])\n\n  const { data: manifestUrls, isLoading: manifestUrlsLoading } = useRequest(\n    \"manifest.json\"\n  )\n\n  const showPilotsList = (ship: any) => setShip(ship)\n  const closePilotsList = () => setShip(undefined)\n\n  const addSquadPilot = (pilot: TPilot, shipXWS: TShip[\"xws\"]) => {\n    setSquad((s) => [...s, { ...pilot, shipXWS }])\n    closePilotsList()\n  }\n\n  const removeSquadPilot = (pilotName: TPilot[\"name\"]) =>\n    setSquad((s) => s.filter((p) => p.name !== pilotName))\n\n  const resetSquad = () => setSquad([])\n\n  return (\n    <AppContext.Provider\n      value={{\n        faction,\n        ship,\n        squad,\n        manifestUrls,\n        manifestUrlsLoading,\n        setFaction,\n        showPilotsList,\n        closePilotsList,\n        addSquadPilot,\n        removeSquadPilot,\n        resetSquad,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n","import React, { createContext, useCallback, useState } from \"react\"\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  ThemeOptions,\n} from \"@material-ui/core/styles\"\n\nlet lightTheme: ThemeOptions = {\n  palette: {\n    type: \"light\",\n  },\n  typography: {\n    fontFamily: \"'Kanit', consolas\",\n  },\n}\n\nconst darkTheme: ThemeOptions = {\n  palette: {\n    type: \"dark\",\n  },\n  typography: {\n    fontFamily: \"'Kanit', consolas\",\n  },\n}\n\ninterface IThemeProviderProps {\n  currentTheme: string\n  changeTheme: () => void\n}\n\nexport const ThemeContext = createContext({} as IThemeProviderProps)\n\nexport const Theme = ({ children }: { children: React.ReactNode }) => {\n  const createTheme = useCallback(\n    (theme: ThemeOptions) => createMuiTheme(theme),\n    []\n  )\n\n  const [theme, setTheme] = useState(createTheme(darkTheme))\n  const changeTheme = () => {\n    theme.palette.type === \"dark\"\n      ? setTheme(createTheme(lightTheme))\n      : setTheme(createTheme(darkTheme))\n  }\n\n  return (\n    <ThemeContext.Provider\n      value={{ changeTheme, currentTheme: theme.palette.type }}\n    >\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n","import React from \"react\";\nimport logo from \"../assets/SWZ01_logo.png\";\nimport { Typography, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst containerStyle = {\n  width: 125,\n};\n\nconst logoStyle = {\n  width: \"100%\",\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  textStyle: {\n    color: theme.palette.grey[900],\n    textAlign: \"right\",\n    marginTop: -10,\n    textTransform: \"uppercase\",\n    fontSize: 9,\n  },\n}));\nexport const Logo = () => {\n  const classes = useStyles();\n  return (\n    <div style={containerStyle}>\n      <img src={logo} alt=\"main-logo\" style={logoStyle} />\n      <Typography className={classes.textStyle}>Second Edition</Typography>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\"\nimport { Grid, IconButton, Paper } from \"@material-ui/core\"\nimport LightMode from \"@material-ui/icons/Brightness7\"\nimport DarkMode from \"@material-ui/icons/Brightness4\"\nimport { ThemeContext } from \"../theme\"\nimport { Logo } from \"./logo\"\n\nexport const Page = ({ children }: { children: any }) => {\n  const { changeTheme, currentTheme } = useContext(ThemeContext)\n  return (\n    <Paper style={{ height: \"100%\" }}>\n      <Grid container direction=\"column\">\n        <Grid\n          container\n          item\n          justify=\"space-between\"\n          style={{ height: 75, padding: 16 }}\n        >\n          <Logo />\n          <IconButton onClick={changeTheme}>\n            {currentTheme === \"dark\" ? <LightMode /> : <DarkMode />}\n          </IconButton>\n        </Grid>\n        <Grid item style={{ padding: 8 }}>\n          {children}\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { useEffect, useState } from \"react\"\n\nconst toJson = (data: any) => data.json()\n\nexport const useRequest = (url: string, opts?: {}) => {\n  const [data, setData] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    fetch(url, { headers: { Accept: \"application/json\" } })\n      .then(toJson)\n      .then((data) => {\n        setData(data)\n      })\n  }, [url])\n\n  return { data, isLoading, error }\n}\n","import React from \"react\";\n\nexport const TextWithButton = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>{children}</div>\n  );\n};\n","import { Typography } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { AppContext, EnumFactionXWS } from \"../context\";\nimport { TextWithButton } from \"./text-with-button\";\n\nconst withBlackBg = [\n  EnumFactionXWS.scumandvillainy,\n  EnumFactionXWS.galacticempire,\n  EnumFactionXWS.galacticrepublic,\n];\n\nexport const FactionIcon = ({\n  icon,\n  xws,\n  small,\n}: {\n  icon: string;\n  xws: EnumFactionXWS;\n  small?: boolean;\n}) => {\n  const blackBg = withBlackBg.includes(xws);\n  return (\n    <img\n      src={icon}\n      alt=\"faction-icon\"\n      style={{\n        width: small ? 25 : 35,\n        background: blackBg ? \"black\" : \"#ddd\",\n        marginRight: 8,\n        padding: 4,\n        borderRadius: 30,\n      }}\n    />\n  );\n};\n\nexport const FactionLabel = ({ small }: { small?: boolean }) => {\n  const { faction } = useContext(AppContext);\n  if (faction) {\n    return (\n      <TextWithButton>\n        <FactionIcon icon={faction.icon} xws={faction.xws} small={small} />\n        <Typography\n          component=\"div\"\n          style={{\n            fontWeight: small ? 500 : 700,\n          }}\n        >\n          {faction.name.toUpperCase()}\n        </Typography>\n      </TextWithButton>\n    );\n  }\n  return <></>;\n};\n","import React, { useContext } from \"react\";\nimport { Page } from \"../../components/page\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { useRequest } from \"../../hooks/useRequest\";\nimport { AppContext, TFaction } from \"../../context\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { FactionIcon } from \"../../components/faction-icon\";\n\nexport const FactionSelect = () => {\n  const {\n    data: factions = [],\n    isLoading,\n  }: { data: TFaction[] | undefined; isLoading: boolean } = useRequest(\n    \"data/factions/factions.json\"\n  );\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const { setFaction } = useContext(AppContext);\n\n  const handleSelect = (faction: TFaction) => {\n    setFaction(faction);\n    history.push(`${location.search}/squad-build`);\n  };\n\n  return (\n    <Page>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={2}\n      >\n        {isLoading && <div>Loading..</div>}\n        {factions.map((f, index: number) => (\n          <Grid item key={index}>\n            <Faction faction={f} onSelect={handleSelect} />\n          </Grid>\n        ))}\n      </Grid>\n    </Page>\n  );\n};\n\nconst Faction = ({\n  faction,\n  onSelect,\n}: {\n  faction: TFaction;\n  onSelect: (faction: TFaction) => void;\n}) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"text\"\n      startIcon={<FactionIcon icon={faction.icon} xws={faction.xws} />}\n      onClick={() => onSelect(faction)}\n      style={{ padding: 16 }}\n    >\n      <Typography variant=\"h6\" style={{ fontWeight: 700 }}>\n        {faction.name}\n      </Typography>\n    </Button>\n  );\n};\n","import React from \"react\";\nimport \"../assets/icons/xwing-miniatures.css\";\n\nexport const XIcon = ({\n  type,\n  icon,\n  size,\n  color,\n  style = {},\n}: {\n  type: \"ship\" | \"font\";\n  icon: string;\n  size?: \"md\" | \"lg\";\n  color?: string;\n  style?: {};\n}) => {\n  const iconSize = size === \"md\" ? \"3.5em\" : size === \"lg\" ? \"5em\" : \"2em\";\n  return (\n    <i\n      style={{ ...style, fontSize: iconSize, color }}\n      className={`xwing-miniatures-${type} xwing-miniatures-${type}-${icon.toLowerCase()}`}\n    ></i>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\"\nimport {\n  ListItem,\n  ListItemText,\n  List,\n  ListItemIcon,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\"\nimport { AppContext, EnumFactionXWS, TShip } from \"../../../context\"\nimport { XIcon } from \"../../../components/Icon\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}))\n\nexport const ShipList = ({\n  faction,\n  onShowList,\n}: {\n  faction: EnumFactionXWS\n  onShowList?: () => void\n}) => {\n  const classes = useStyles()\n\n  const [ships, setShips] = useState<TShip[]>([])\n  const [shipsLoading, setShipsLoading] = useState(true)\n\n  const { manifestUrls, showPilotsList } = useContext(AppContext)\n\n  const pilots = manifestUrls.pilots.find((u: any) => u.faction === faction)\n\n  useEffect(() => {\n    const promises = pilots.ships.map((s: string) =>\n      fetch(s, { headers: { Accept: \"application/json\" } })\n    )\n    Promise.all(promises).then((rs: any) => {\n      const data = rs.map((r: any) => r.json().then((r: any) => r))\n      Promise.all(data).then((d: any) => {\n        setShips(d)\n        setShipsLoading(false)\n      })\n    })\n  }, [pilots])\n\n  if (shipsLoading) {\n    return <div>Loading</div>\n  }\n\n  if (ships.length > 0) {\n    return (\n      <List\n        className={classes.root}\n        style={{\n          maxHeight: 700,\n          overflowX: \"hidden\",\n        }}\n        dense\n      >\n        {ships.map((ship) => (\n          <ListItem\n            key={ship.name}\n            button\n            onClick={() => {\n              showPilotsList(ship)\n              onShowList?.()\n            }}\n          >\n            <ListItemIcon style={{ marginRight: 8 }}>\n              <XIcon type=\"ship\" icon={ship.xws} size=\"lg\" />\n            </ListItemIcon>\n            <ListItemText primary={ship.name.toUpperCase()} />\n          </ListItem>\n        ))}\n      </List>\n    )\n  }\n\n  return <div />\n}\n","import React, { useState } from \"react\";\nimport {\n  ClickAwayListener,\n  IconButton,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nexport const UpdateText = ({\n  text,\n  onClose,\n  onUpdate,\n}: {\n  text: string;\n  onClose: (currentText: string) => void;\n  onUpdate: (updatedText: string) => void;\n}) => {\n  const [value, setValue] = useState(text);\n\n  return (\n    <ClickAwayListener onClickAway={() => onClose(text)}>\n      <OutlinedInput\n        style={{ background: \"white\" }}\n        fullWidth\n        autoFocus\n        value={value}\n        onChange={({ target }) => {\n          setValue(target.value);\n        }}\n        onKeyDown={({ key }) => {\n          if (key.toLowerCase() === \"enter\") {\n            onUpdate(value);\n          }\n          if (key.toLowerCase() === \"escape\") {\n            onClose(text);\n          }\n        }}\n        endAdornment={\n          <IconButton color=\"primary\" onClick={() => onUpdate(value)}>\n            <CheckIcon />\n          </IconButton>\n        }\n      />\n    </ClickAwayListener>\n  );\n};\n","import React from \"react\"\nimport stringReplace from \"react-string-replace\"\nimport clsx from \"clsx\"\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\"\nimport { TPilot } from \"../../../context\"\nimport { XIcon } from \"../../../components/Icon\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nconst useCardStyle = makeStyles((theme) => ({\n  root: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  headerStyle: {\n    alignItems: \"flex-start\",\n  },\n  initiativeStyle: {\n    color: \"orange\",\n    fontWeight: 900,\n  },\n  costStyle: {\n    fontWeight: 900,\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nconst ability = (ability: string) =>\n  stringReplace(ability, /\\[(.*?)\\]/, (match) => (\n    <XIcon type=\"font\" icon={`token-${match.toLowerCase()}`} />\n  ))\n\nexport const PilotCard = ({\n  pilot,\n  onAddPilot,\n  onRemovePilot,\n}: {\n  pilot: TPilot\n  onAddPilot?: (pilot: TPilot) => void\n  onRemovePilot?: (pilot: string) => void\n}) => {\n  const classes = useCardStyle()\n\n  return (\n    <Card\n      variant=\"outlined\"\n      onClick={() => onAddPilot?.(pilot)}\n      className={clsx({ [classes.root]: onAddPilot })}\n    >\n      <CardHeader\n        title={\n          <>\n            {pilot.name}\n            {pilot.cost && (\n              <Typography\n                color=\"primary\"\n                variant=\"body1\"\n                component=\"span\"\n                className={classes.costStyle}\n              >\n                {pilot.cost}\n              </Typography>\n            )}\n          </>\n        }\n        className={classes.headerStyle}\n        avatar={\n          <Typography variant=\"h6\" className={classes.initiativeStyle}>\n            {pilot.initiative}\n          </Typography>\n        }\n        titleTypographyProps={{\n          variant: \"h6\",\n          style: {\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n          },\n        }}\n        subheader={pilot.caption}\n        action={\n          onRemovePilot && (\n            <IconButton onClick={() => onRemovePilot(pilot.name)}>\n              <CloseIcon />\n            </IconButton>\n          )\n        }\n      />\n      <CardContent>\n        {pilot.shipXWS && (\n          <div>\n            <XIcon type=\"ship\" icon={pilot.shipXWS} size=\"lg\" />\n          </div>\n        )}\n        <Typography variant=\"subtitle1\">{ability(pilot.ability)}</Typography>\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\", overflowX: \"auto\" }}>\n          {pilot.slots?.map((s) => (\n            <XIcon type=\"font\" icon={s} size=\"md\" />\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { PilotCard } from \"./pilot-card\";\nimport { AppContext, TPilot } from \"../../../context\";\n\nexport const SquadList = ({ squad }: { squad: TPilot[] }) => {\n  const { removeSquadPilot } = useContext(AppContext);\n  return (\n    <Grid container spacing={2}>\n      {squad.map((s) => (\n        <Grid item sm={12}>\n          <PilotCard pilot={s} onRemovePilot={removeSquadPilot} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React, { useContext, useState } from \"react\"\nimport {\n  Typography,\n  IconButton,\n  Card,\n  CardHeader,\n  CardContent,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport { TextWithButton } from \"../../../components/text-with-button\"\nimport { UpdateText } from \"../../../components/update-text\"\nimport { AppContext } from \"../../../context\"\nimport { SquadList } from \"./squad.list\"\nimport { Alert } from \"@material-ui/lab\"\nimport { FactionIcon } from \"../../../components/faction-icon\"\n\nconst useBuilderCardStyle = makeStyles((theme: Theme) => ({\n  root: {\n    maxHeight: 700,\n    overflowY: \"auto\",\n  },\n  header: { padding: 0 },\n}))\n\nexport const BuilderCard = () => {\n  const { squad } = useContext(AppContext)\n  const classes = useBuilderCardStyle()\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        className={classes.header}\n        title={\n          <BuilderCardHeader\n            squadPoints={squad\n              .map((s) => s.cost || 0)\n              .reduce((a, c) => a + c, 0)}\n          />\n        }\n      />\n      <CardContent className={classes.root}>\n        {squad.length === 0 && (\n          <Alert style={{ margin: 8 }} severity=\"info\">\n            No squad pilots selected\n          </Alert>\n        )}\n        <SquadList squad={squad} />\n      </CardContent>\n    </Card>\n  )\n}\n\nconst BuilderCardHeader = ({ squadPoints }: { squadPoints: number }) => {\n  const total = 200\n  const [squadName, setSquadName] = useState(\"Squad Name\")\n  const [showSquadNameInput, setShowSquadNameInput] = useState(false)\n  const { faction } = useContext(AppContext)\n\n  return (\n    <div style={{ padding: 16 }}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <FactionIcon icon={faction!.icon} xws={faction!.xws} />\n        {showSquadNameInput ? (\n          <UpdateText\n            text={squadName}\n            onClose={(currentSquadName) => {\n              setSquadName(currentSquadName)\n              setShowSquadNameInput(false)\n            }}\n            onUpdate={(updatedValue) => {\n              setSquadName(updatedValue)\n              setShowSquadNameInput(false)\n            }}\n          />\n        ) : (\n          <TextWithButton>\n            <Typography variant=\"h4\">{squadName?.toUpperCase()}</Typography>\n            <IconButton onClick={() => setShowSquadNameInput(true)}>\n              <EditIcon />\n            </IconButton>\n          </TextWithButton>\n        )}\n      </div>\n\n      <Typography variant=\"body1\" component=\"span\" color=\"primary\">\n        <span\n          style={{\n            fontWeight: 700,\n            color: squadPoints >= total ? \"red\" : undefined,\n          }}\n        >\n          {squadPoints}/{total}\n        </span>\n      </Typography>\n    </div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport Slide from \"@material-ui/core/Slide\"\nimport { TransitionProps } from \"@material-ui/core/transitions\"\nimport { AppContext, TPilot, TShip } from \"../../../context\"\nimport { PilotCard } from \"./pilot-card\"\nimport {\n  Button,\n  DialogActions,\n  Grid,\n  Theme,\n  Typography,\n} from \"@material-ui/core\"\nimport { XIcon } from \"../../../components/Icon\"\nimport { makeStyles } from \"@material-ui/styles\"\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"down\" ref={ref} {...props} />\n})\n\nconst useDialogStyles = makeStyles((theme: Theme) => ({\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 3),\n  },\n}))\n\nexport const PilotList = ({\n  ship,\n  open,\n  onClose,\n}: {\n  ship: TShip | undefined\n  open: boolean\n  onAdd: () => void\n  onClose: () => void\n}) => {\n  const classes = useDialogStyles()\n  const { addSquadPilot } = useContext(AppContext)\n\n  const onAddPilot = (shipWXS: TShip[\"xws\"]) => (pilot: TPilot) =>\n    addSquadPilot(pilot, shipWXS)\n  const partialAddPilot = onAddPilot(ship?.xws!)\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      maxWidth=\"md\"\n      fullWidth\n    >\n      <DialogTitle disableTypography className={classes.title}>\n        <Typography\n          style={{\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n            marginRight: 8,\n          }}\n        >\n          {ship?.name}\n        </Typography>\n        <XIcon type=\"ship\" icon={ship?.xws || \"\"} size=\"lg\" />\n      </DialogTitle>\n      <DialogContent dividers>\n        <Grid container spacing={2} direction=\"column\">\n          {ship?.pilots.map((p) => (\n            <Grid item xs={12}>\n              <PilotCard pilot={p} onAddPilot={partialAddPilot} />\n            </Grid>\n          ))}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} variant=\"text\">\n          CLOSE\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from \"react\"\nimport { Button, SwipeableDrawer, Theme } from \"@material-ui/core\"\nimport { useTheme } from \"@material-ui/styles\"\n\nexport const SideBar = ({\n  open,\n  children,\n  onClose,\n  onOpen,\n}: {\n  open: boolean\n  children: React.ReactNode\n  onClose: () => void\n  onOpen: () => void\n}) => {\n  const width = 300\n  const theme: Theme = useTheme()\n  return (\n    <SwipeableDrawer\n      ModalProps={{\n        keepMounted: true,\n      }}\n      onOpen={onOpen}\n      anchor=\"left\"\n      open={open}\n      onClose={onClose}\n    >\n      <div style={{ width }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            borderBottom: `1px solid ${theme.palette.grey[300]}`,\n          }}\n        >\n          <Button onClick={onClose}>Close</Button>\n        </div>\n        {children}\n      </div>\n    </SwipeableDrawer>\n  )\n}\n","import React, { useContext, useState } from \"react\"\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\"\nimport { Button, Grid } from \"@material-ui/core\"\nimport { ShipList } from \"./components/ship-list\"\nimport { Page } from \"../../components/page\"\nimport { AppContext } from \"../../context\"\nimport { BuilderCard } from \"./components/builder-card\"\nimport { PilotList } from \"./components/pilot-list\"\nimport { SideBar } from \"../../components/side-bar\"\nimport { useIsMobile } from \"../../hooks/useIsMobile\"\n\nexport const SquadBuild = () => {\n  const { faction, ship, closePilotsList, resetSquad } = useContext(AppContext)\n\n  const location = useLocation()\n  const history = useHistory()\n  const isMobile = useIsMobile()\n\n  const [showSideBar, setShowSideBar] = useState(false)\n\n  const handleCloseSideBar = () => setShowSideBar(false)\n\n  if (!faction && location.pathname !== \"/faction-select\") {\n    return <Redirect to=\"/faction-select\" />\n  }\n\n  if (faction) {\n    return (\n      <Page>\n        <PilotList\n          open={ship ? true : false}\n          ship={ship}\n          onAdd={() => {}}\n          onClose={closePilotsList}\n        />\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          {isMobile ? (\n            <SideBar\n              open={showSideBar}\n              onClose={handleCloseSideBar}\n              onOpen={() => setShowSideBar(true)}\n            >\n              {\n                <ShipList\n                  faction={faction.xws}\n                  onShowList={handleCloseSideBar}\n                />\n              }\n            </SideBar>\n          ) : (\n            <Grid item style={{ width: 275, minWidth: 275 }}>\n              {<ShipList faction={faction.xws} />}\n            </Grid>\n          )}\n\n          <Grid item style={{ width: \"100%\" }}>\n            <>\n              <Button\n                onClick={() => {\n                  resetSquad()\n                  history.push(\"/faction-select\")\n                }}\n              >\n                Factions\n              </Button>\n              {isMobile && (\n                <Button onClick={() => setShowSideBar(true)}>Ships</Button>\n              )}\n              <BuilderCard />\n            </>\n          </Grid>\n        </Grid>\n      </Page>\n    )\n  }\n}\n","import { useMediaQuery } from \"@material-ui/core\";\n\nexport const useIsMobile = () => useMediaQuery(\"(max-width:600px)\");\n","import React from \"react\"\nimport { Redirect, Route, Switch } from \"react-router-dom\"\nimport CssBaseLine from \"@material-ui/core/CssBaseline\"\nimport { Theme } from \"./theme\"\nimport { FactionSelect } from \"./routes/faction-select\"\nimport { SquadBuild } from \"./routes/squad-build\"\nimport { AppContextProvider } from \"./context\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <>\n      <CssBaseLine />\n      <AppContextProvider>\n        <Theme>\n          <Switch>\n            <Route path=\"/faction-select\">\n              <FactionSelect />\n            </Route>\n            <Route path=\"/squad-build\">\n              <SquadBuild />\n            </Route>\n            <Route path=\"/\">\n              <Redirect to=\"/faction-select\" />\n            </Route>\n          </Switch>\n        </Theme>\n      </AppContextProvider>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/Xwing-Squad-Builder\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/SWZ01_logo.19be28cc.png\";"],"sourceRoot":""}