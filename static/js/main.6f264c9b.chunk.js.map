{"version":3,"sources":["context.tsx","theme.tsx","components/logo.tsx","components/page.tsx","hooks/useRequest.tsx","components/text-with-button.tsx","components/faction-icon.tsx","routes/faction-select/index.tsx","components/Icon.tsx","routes/squad-build/components/ship-list.tsx","components/update-text.tsx","routes/squad-build/components/pilot-card.tsx","routes/squad-build/components/squad.list.tsx","routes/squad-build/components/builder-card.tsx","routes/squad-build/components/pilot-list.tsx","components/side-bar.tsx","routes/squad-build/index.tsx","hooks/useIsMobile.tsx","App.js","serviceWorker.js","index.js","assets/SWZ01_logo.png"],"names":["EnumShipSize","EnumActionDifficulty","EnumActionType","EnumFactionXWS","EnumFactionNames","theme","createMuiTheme","palette","type","typography","fontFamily","Theme","children","ThemeProvider","containerStyle","width","logoStyle","useStyles","makeStyles","textStyle","color","grey","textAlign","marginTop","textTransform","fontSize","Logo","classes","style","src","logo","alt","Typography","className","Page","Grid","container","direction","item","height","margin","marginBottom","padding","toJson","data","json","useRequest","url","opts","useState","setData","isLoading","error","useEffect","fetch","headers","Accept","then","AppContext","createContext","AppContextProvider","faction","setFaction","ship","setShip","squad","setSquad","manifestUrls","manifestUrlsLoading","closePilotsList","undefined","Provider","value","showPilotsList","addSquadPilot","pilot","shipXWS","s","removeSquadPilot","pilotName","filter","p","name","TextWithButton","display","alignItems","withBlackBg","scumandvillainy","galacticempire","galacticrepublic","FactionIcon","icon","xws","small","blackBg","includes","background","marginRight","borderRadius","FactionSelect","factions","history","useHistory","location","useLocation","useContext","handleSelect","push","search","justify","spacing","map","f","index","key","onSelect","Faction","Button","size","variant","startIcon","onClick","fontWeight","XIcon","iconSize","toLowerCase","ShipList","ships","setShips","shipsLoading","setShipsLoading","pilots","find","u","promises","Promise","all","rs","r","d","length","List","maxHeight","overflowX","border","dense","ListItem","button","ListItemIcon","ListItemText","toUpperCase","UpdateText","text","onClose","onUpdate","setValue","ClickAwayListener","onClickAway","OutlinedInput","fullWidth","autoFocus","onChange","target","onKeyDown","endAdornment","IconButton","useCardStyle","root","cursor","headerStyle","initiativeStyle","costStyle","marginLeft","PilotCard","ability","onAddPilot","onRemovePilot","Card","clsx","CardHeader","title","cost","avatar","initiative","titleTypographyProps","subheader","caption","action","CardContent","stringReplace","match","slots","SquadList","sm","useBuilderCardStyle","overflowY","header","BuilderCard","squadPoints","reduce","a","c","Alert","severity","BuilderCardHeader","squadName","setSquadName","showSquadNameInput","setShowSquadNameInput","currentSquadName","updatedValue","Transition","React","forwardRef","props","ref","Slide","useDialogStyles","justifyContent","content","PilotList","shipWXS","open","partialAddPilot","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","maxWidth","DialogTitle","disableTypography","DialogContent","dividers","xs","DialogActions","SideBar","Drawer","PaperProps","top","ModalProps","anchor","SquadBuild","isMobile","useMediaQuery","showSideBar","setShowSideBar","pathname","onAdd","wrap","minWidth","to","App","path","Boolean","window","hostname","ReactDOM","render","StrictMode","console","log","process","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.6f264c9b.chunk.js","sourcesContent":["import React, { createContext, SetStateAction, useState } from \"react\";\nimport { useRequest } from \"./hooks/useRequest\";\n\nenum EnumShipSize {\n  Small = \"Small\",\n  Medium = \"Medium\",\n  Large = \"Large\",\n}\n\nenum EnumActionDifficulty {\n  White = \"White\",\n  Red = \"Red\",\n}\n\nenum EnumActionType {\n  Focus = \"Focus\",\n  Reinforce = \"Reinforce\",\n  Lock = \"Lock\",\n  \"Barrel Roll\" = \"Barrel Roll\",\n  Evade = \"Evade\",\n  Cloak = \"Cloak\",\n  Coordinate = \"Coordinate\",\n  Calculate = \"Calculate\",\n  Jam = \"Jam\",\n  Reload = \"Reload\",\n  Slam = \"Slam\",\n  \"Rotate Arc\" = \"Rotate Arc\",\n}\n\nexport type TShip = {\n  actions: Array<{ difficulty: EnumActionDifficulty; type: EnumActionType }>;\n  faction: EnumFactionNames;\n  ffg: number;\n  icon: string;\n  name: string;\n  pilots: Array<TPilot>;\n  size: EnumShipSize;\n  stats: any[]; // Needs populating\n  xws: string;\n};\n\nexport type TPilot = {\n  artwork: string;\n  ability: string;\n  caption: string;\n  cost: number | undefined;\n  ffg: number;\n  hyperspace: boolean;\n  image: string;\n  initiative: number;\n  limited: number;\n  name: string;\n  shipAbility: { name: string; text: string } | undefined;\n  slots?: string[];\n  xws: string;\n  shipXWS?: string;\n};\n\nexport type TFaction = {\n  name: string;\n  ffg: number;\n  icon: string;\n  xws: EnumFactionXWS;\n};\n\nexport enum EnumFactionXWS {\n  rebelalliance = \"rebelalliance\",\n  galacticempire = \"galacticempire\",\n  scumandvillainy = \"scumandvillainy\",\n  resistance = \"resistance\",\n  firstorder = \"firstorder\",\n  galacticrepublic = \"galacticrepublic\",\n  separatistalliance = \"separatistalliance\",\n}\n\nenum EnumFactionNames {\n  \"Rebel Alliance\" = \"Rebel Alliance\",\n  \"Galactic Empire\" = \"Galactic Empire\",\n  \"Scum and Villainy\" = \"Scum and Villainy\",\n  \"Resistance\" = \"Resistance\",\n  \"First Order\" = \"First Order\",\n  \"Galactic Republic\" = \"Galactic Republic\",\n  \"Separatist Alliance\" = \"Separatist Alliance\",\n}\n\ninterface IAppContext {\n  manifestUrlsLoading: boolean;\n  manifestUrls: any;\n  faction: TFaction | undefined;\n  ship: any;\n  squad: TPilot[];\n  setFaction: React.Dispatch<SetStateAction<TFaction | undefined>>;\n  showPilotsList: (ship: any) => void;\n  closePilotsList: () => void;\n  addSquadPilot: (pilot: TPilot, shipXWS: TShip[\"xws\"]) => void;\n  removeSquadPilot: (pilotName: TPilot[\"name\"]) => void;\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppContextProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const [faction, setFaction] = useState<TFaction | undefined>();\n  const [ship, setShip] = useState<TShip>();\n  const [squad, setSquad] = useState<TPilot[]>([]);\n\n  const { data: manifestUrls, isLoading: manifestUrlsLoading } = useRequest(\n    \"/manifest.json\"\n  );\n\n  const showPilotsList = (ship: any) => setShip(ship);\n  const closePilotsList = () => setShip(undefined);\n\n  const addSquadPilot = (pilot: TPilot, shipXWS: TShip[\"xws\"]) => {\n    setSquad((s) => [...s, { ...pilot, shipXWS }]);\n    closePilotsList();\n  };\n\n  const removeSquadPilot = (pilotName: TPilot[\"name\"]) =>\n    setSquad((s) => s.filter((p) => p.name !== pilotName));\n\n  return (\n    <AppContext.Provider\n      value={{\n        faction,\n        ship,\n        squad,\n        manifestUrls,\n        manifestUrlsLoading,\n        setFaction,\n        showPilotsList,\n        closePilotsList,\n        addSquadPilot,\n        removeSquadPilot,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n  },\n  typography: {\n    fontFamily: \"'Kanit', consolas\",\n  },\n});\n\nexport const Theme = ({ children }: { children: React.ReactNode }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n","import React from \"react\";\nimport logo from \"../assets/SWZ01_logo.png\";\nimport { Typography, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst containerStyle = {\n  width: 125,\n};\n\nconst logoStyle = {\n  width: \"100%\",\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  textStyle: {\n    color: theme.palette.grey[900],\n    textAlign: \"right\",\n    marginTop: -10,\n    textTransform: \"uppercase\",\n    fontSize: 9,\n  },\n}));\nexport const Logo = () => {\n  const classes = useStyles();\n  return (\n    <div style={containerStyle}>\n      <img src={logo} alt=\"main-logo\" style={logoStyle} />\n      <Typography className={classes.textStyle}>Second Edition</Typography>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Logo } from \"./logo\";\n\nexport const Page = ({ children }: { children: any }) => {\n  return (\n    <Grid container direction=\"column\">\n      <Grid item style={{ height: 75, margin: 16, marginBottom: 0 }}>\n        <Logo />\n      </Grid>\n      <Grid item style={{ padding: 8 }}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\n","import { useEffect, useState } from \"react\"\n\nconst toJson = (data: any) => data.json()\n\nexport const useRequest = (url: string, opts?: {}) => {\n  const [data, setData] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    fetch(url, { headers: { Accept: \"application/json\" } })\n      .then(toJson)\n      .then((data) => {\n        setData(data)\n      })\n  }, [url])\n\n  return { data, isLoading, error }\n}\n","import React from \"react\";\n\nexport const TextWithButton = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>{children}</div>\n  );\n};\n","import { Typography } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { AppContext, EnumFactionXWS } from \"../context\";\nimport { TextWithButton } from \"./text-with-button\";\n\nconst withBlackBg = [\n  EnumFactionXWS.scumandvillainy,\n  EnumFactionXWS.galacticempire,\n  EnumFactionXWS.galacticrepublic,\n];\n\nexport const FactionIcon = ({\n  icon,\n  xws,\n  small,\n}: {\n  icon: string;\n  xws: EnumFactionXWS;\n  small?: boolean;\n}) => {\n  const blackBg = withBlackBg.includes(xws);\n  return (\n    <img\n      src={icon}\n      alt=\"faction-icon\"\n      style={{\n        width: small ? 25 : 35,\n        background: blackBg ? \"black\" : \"#ddd\",\n        marginRight: 8,\n        padding: 4,\n        borderRadius: 30,\n      }}\n    />\n  );\n};\n\nexport const FactionLabel = ({ small }: { small?: boolean }) => {\n  const { faction } = useContext(AppContext);\n  if (faction) {\n    return (\n      <TextWithButton>\n        <FactionIcon icon={faction.icon} xws={faction.xws} small={small} />\n        <Typography\n          component=\"div\"\n          style={{\n            fontWeight: small ? 500 : 700,\n          }}\n        >\n          {faction.name.toUpperCase()}\n        </Typography>\n      </TextWithButton>\n    );\n  }\n  return <></>;\n};\n","import React, { useContext } from \"react\";\nimport { Page } from \"../../components/page\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { useRequest } from \"../../hooks/useRequest\";\nimport { AppContext, TFaction } from \"../../context\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { FactionIcon } from \"../../components/faction-icon\";\n\nexport const FactionSelect = () => {\n  const {\n    data: factions = [],\n    isLoading,\n  }: { data: TFaction[] | undefined; isLoading: boolean } = useRequest(\n    \"data/factions/factions.json\"\n  );\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const { setFaction } = useContext(AppContext);\n\n  const handleSelect = (faction: TFaction) => {\n    setFaction(faction);\n    history.push(`${location.search}/squad-build`);\n  };\n\n  return (\n    <Page>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={2}\n      >\n        {isLoading && <div>Loading..</div>}\n        {factions.map((f, index: number) => (\n          <Grid item key={index}>\n            <Faction faction={f} onSelect={handleSelect} />\n          </Grid>\n        ))}\n      </Grid>\n    </Page>\n  );\n};\n\nconst Faction = ({\n  faction,\n  onSelect,\n}: {\n  faction: TFaction;\n  onSelect: (faction: TFaction) => void;\n}) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"text\"\n      startIcon={<FactionIcon icon={faction.icon} xws={faction.xws} />}\n      onClick={() => onSelect(faction)}\n      style={{ padding: 16 }}\n    >\n      <Typography variant=\"h6\" style={{ fontWeight: 700 }}>\n        {faction.name}\n      </Typography>\n    </Button>\n  );\n};\n","import React from \"react\";\nimport \"../assets/icons/xwing-miniatures.css\";\n\nexport const XIcon = ({\n  type,\n  icon,\n  size,\n  color,\n  style = {},\n}: {\n  type: \"ship\" | \"font\";\n  icon: string;\n  size?: \"md\" | \"lg\";\n  color?: string;\n  style?: {};\n}) => {\n  const iconSize = size === \"md\" ? \"3.5em\" : size === \"lg\" ? \"5em\" : \"2em\";\n  return (\n    <i\n      style={{ ...style, fontSize: iconSize, color }}\n      className={`xwing-miniatures-${type} xwing-miniatures-${type}-${icon.toLowerCase()}`}\n    ></i>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\"\nimport { ListItem, ListItemText, List, ListItemIcon } from \"@material-ui/core\"\nimport { AppContext, EnumFactionXWS, TShip } from \"../../../context\"\nimport { XIcon } from \"../../../components/Icon\"\n\nexport const ShipList = ({ faction }: { faction: EnumFactionXWS }) => {\n  const [ships, setShips] = useState<TShip[]>([])\n  const [shipsLoading, setShipsLoading] = useState(true)\n\n  const { manifestUrls, showPilotsList } = useContext(AppContext)\n\n  const pilots = manifestUrls.pilots.find((u: any) => u.faction === faction)\n\n  useEffect(() => {\n    const promises = pilots.ships.map((s: string) =>\n      fetch(s, { headers: { Accept: \"application/json\" } })\n    )\n    Promise.all(promises).then((rs: any) => {\n      const data = rs.map((r: any) => r.json().then((r: any) => r))\n      Promise.all(data).then((d: any) => {\n        setShips(d)\n        setShipsLoading(false)\n      })\n    })\n  }, [pilots])\n\n  if (shipsLoading) {\n    return <div>Loading</div>\n  }\n\n  if (ships.length > 0) {\n    return (\n      <List\n        style={{\n          maxHeight: 700,\n          overflowX: \"hidden\",\n          border: \"1px solid #eee\",\n        }}\n        dense\n      >\n        {ships.map((ship) => (\n          <ListItem key={ship.name} button onClick={() => showPilotsList(ship)}>\n            <ListItemIcon style={{ marginRight: 8 }}>\n              <XIcon type=\"ship\" icon={ship.xws} size=\"lg\" color=\"black\" />\n            </ListItemIcon>\n            <ListItemText style={{ color: \"black\" }}>\n              {ship.name.toUpperCase()}\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    )\n  }\n\n  return <div />\n}\n","import React, { useState } from \"react\";\nimport {\n  ClickAwayListener,\n  IconButton,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nexport const UpdateText = ({\n  text,\n  onClose,\n  onUpdate,\n}: {\n  text: string;\n  onClose: (currentText: string) => void;\n  onUpdate: (updatedText: string) => void;\n}) => {\n  const [value, setValue] = useState(text);\n\n  return (\n    <ClickAwayListener onClickAway={() => onClose(text)}>\n      <OutlinedInput\n        style={{ background: \"white\" }}\n        fullWidth\n        autoFocus\n        value={value}\n        onChange={({ target }) => {\n          setValue(target.value);\n        }}\n        onKeyDown={({ key }) => {\n          if (key.toLowerCase() === \"enter\") {\n            onUpdate(value);\n          }\n          if (key.toLowerCase() === \"escape\") {\n            onClose(text);\n          }\n        }}\n        endAdornment={\n          <IconButton color=\"primary\" onClick={() => onUpdate(value)}>\n            <CheckIcon />\n          </IconButton>\n        }\n      />\n    </ClickAwayListener>\n  );\n};\n","import React from \"react\";\nimport stringReplace from \"react-string-replace\";\nimport clsx from \"clsx\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { TPilot } from \"../../../context\";\nimport { XIcon } from \"../../../components/Icon\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useCardStyle = makeStyles((theme) => ({\n  root: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n      background: theme.palette.grey[100],\n    },\n  },\n  headerStyle: {\n    alignItems: \"flex-start\",\n  },\n  initiativeStyle: {\n    color: \"orange\",\n    fontWeight: 900,\n  },\n  costStyle: {\n    fontWeight: 900,\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ability = (ability: string) =>\n  stringReplace(ability, /\\[(.*?)\\]/, (match) => (\n    <XIcon type=\"font\" icon={`token-${match.toLowerCase()}`} />\n  ));\n\nexport const PilotCard = ({\n  pilot,\n  onAddPilot,\n  onRemovePilot,\n}: {\n  pilot: TPilot;\n  onAddPilot?: (pilot: TPilot) => void;\n  onRemovePilot?: (pilot: string) => void;\n}) => {\n  const classes = useCardStyle();\n\n  return (\n    <Card\n      variant=\"outlined\"\n      onClick={() => onAddPilot?.(pilot)}\n      className={clsx({ [classes.root]: onAddPilot })}\n    >\n      <CardHeader\n        title={\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            {pilot.name}\n            {pilot.cost && (\n              <Typography\n                color=\"primary\"\n                variant=\"body1\"\n                className={classes.costStyle}\n              >\n                {`(${pilot.cost})`}\n              </Typography>\n            )}\n          </div>\n        }\n        className={classes.headerStyle}\n        avatar={\n          <Typography variant=\"h6\" className={classes.initiativeStyle}>\n            {pilot.initiative}\n          </Typography>\n        }\n        titleTypographyProps={{\n          variant: \"h6\",\n          style: {\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n          },\n        }}\n        subheader={pilot.caption}\n        action={\n          onRemovePilot && (\n            <IconButton onClick={() => onRemovePilot(pilot.name)}>\n              <CloseIcon />\n            </IconButton>\n          )\n        }\n      />\n      <CardContent>\n        {pilot.shipXWS && (\n          <div>\n            <XIcon type=\"ship\" icon={pilot.shipXWS} size=\"lg\" />\n          </div>\n        )}\n        <Typography variant=\"subtitle1\">{ability(pilot.ability)}</Typography>\n        <div>\n          {pilot.slots?.map((s) => (\n            <XIcon type=\"font\" icon={s} size=\"md\" />\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { PilotCard } from \"./pilot-card\";\nimport { AppContext, TPilot } from \"../../../context\";\n\nexport const SquadList = ({ squad }: { squad: TPilot[] }) => {\n  const { removeSquadPilot } = useContext(AppContext);\n  return (\n    <Grid container spacing={2}>\n      {squad.map((s) => (\n        <Grid item sm={12}>\n          <PilotCard pilot={s} onRemovePilot={removeSquadPilot} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport {\n  Typography,\n  IconButton,\n  Card,\n  CardHeader,\n  CardContent,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { TextWithButton } from \"../../../components/text-with-button\";\nimport { UpdateText } from \"../../../components/update-text\";\nimport { AppContext } from \"../../../context\";\nimport { SquadList } from \"./squad.list\";\nimport { Alert } from \"@material-ui/lab\";\nimport { FactionIcon } from \"../../../components/faction-icon\";\n\nconst useBuilderCardStyle = makeStyles((theme: Theme) => ({\n  root: {\n    maxHeight: 700,\n    overflowY: \"auto\",\n  },\n  header: { padding: 0, background: theme.palette.grey[200] },\n}));\n\nexport const BuilderCard = () => {\n  const { squad } = useContext(AppContext);\n  const classes = useBuilderCardStyle();\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        className={classes.header}\n        title={\n          <BuilderCardHeader\n            squadPoints={squad\n              .map((s) => s.cost || 0)\n              .reduce((a, c) => a + c, 0)}\n          />\n        }\n      />\n      <CardContent className={classes.root}>\n        {squad.length === 0 && (\n          <Alert style={{ margin: 8 }} severity=\"info\">\n            No squad pilots selected\n          </Alert>\n        )}\n        <SquadList squad={squad} />\n      </CardContent>\n    </Card>\n  );\n};\n\nconst BuilderCardHeader = ({ squadPoints }: { squadPoints: number }) => {\n  const total = 200;\n  const [squadName, setSquadName] = useState(\"Squad Name\");\n  const [showSquadNameInput, setShowSquadNameInput] = useState(false);\n  const { faction } = useContext(AppContext);\n\n  return (\n    <div style={{ padding: 16 }}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <FactionIcon icon={faction!.icon} xws={faction!.xws} />\n        {showSquadNameInput ? (\n          <UpdateText\n            text={squadName}\n            onClose={(currentSquadName) => {\n              setSquadName(currentSquadName);\n              setShowSquadNameInput(false);\n            }}\n            onUpdate={(updatedValue) => {\n              setSquadName(updatedValue);\n              setShowSquadNameInput(false);\n            }}\n          />\n        ) : (\n          <TextWithButton>\n            <Typography variant=\"h4\">{squadName?.toUpperCase()}</Typography>\n            <IconButton onClick={() => setShowSquadNameInput(true)}>\n              <EditIcon />\n            </IconButton>\n          </TextWithButton>\n        )}\n      </div>\n\n      <Typography variant=\"caption\" color=\"primary\">\n        <span\n          style={{\n            fontWeight: 700,\n            color: squadPoints >= total ? \"red\" : undefined,\n          }}\n        >\n          {squadPoints}/{total}\n        </span>\n      </Typography>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport { AppContext, TPilot, TShip } from \"../../../context\";\nimport { PilotCard } from \"./pilot-card\";\nimport {\n  Button,\n  DialogActions,\n  Grid,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { XIcon } from \"../../../components/Icon\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst useDialogStyles = makeStyles((theme: Theme) => ({\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 3),\n  },\n  content: {\n    background: theme.palette.grey[200],\n  },\n}));\n\nexport const PilotList = ({\n  ship,\n  open,\n  onClose,\n}: {\n  ship: TShip | undefined;\n  open: boolean;\n  onAdd: () => void;\n  onClose: () => void;\n}) => {\n  const classes = useDialogStyles();\n  const { addSquadPilot } = useContext(AppContext);\n\n  const onAddPilot = (shipWXS: TShip[\"xws\"]) => (pilot: TPilot) =>\n    addSquadPilot(pilot, shipWXS);\n  const partialAddPilot = onAddPilot(ship?.xws!);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n      keepMounted\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      maxWidth=\"md\"\n      fullWidth\n    >\n      <DialogTitle disableTypography className={classes.title}>\n        <Typography\n          style={{\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n            marginRight: 8,\n          }}\n        >\n          {ship?.name}\n        </Typography>\n        <XIcon type=\"ship\" icon={ship?.xws || \"\"} size=\"lg\" color=\"black\" />\n      </DialogTitle>\n      <DialogContent dividers className={classes.content}>\n        <Grid container spacing={2} direction=\"column\">\n          {ship?.pilots.map((p) => (\n            <Grid item xs={12}>\n              <PilotCard pilot={p} onAddPilot={partialAddPilot} />\n            </Grid>\n          ))}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} variant=\"text\">\n          CLOSE\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport { Button, Drawer } from \"@material-ui/core\";\n\nexport const SideBar = ({\n  open,\n  children,\n  onClose,\n}: {\n  open: boolean;\n  children: React.ReactNode;\n  onClose: () => void;\n}) => {\n  const width = 300;\n  return (\n    <Drawer\n      PaperProps={{ style: { top: \"unset\" } }}\n      ModalProps={{\n        keepMounted: true,\n      }}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={open}\n      onClose={onClose}\n    >\n      <div style={{ width }}>\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button onClick={onClose}>Close</Button>\n        </div>\n        {children}\n      </div>\n    </Drawer>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { ShipList } from \"./components/ship-list\";\nimport { Page } from \"../../components/page\";\nimport { AppContext } from \"../../context\";\nimport { BuilderCard } from \"./components/builder-card\";\nimport { PilotList } from \"./components/pilot-list\";\nimport { SideBar } from \"../../components/side-bar\";\nimport { useIsMobile } from \"../../hooks/useIsMobile\";\n\nexport const SquadBuild = () => {\n  const { faction, ship, closePilotsList } = useContext(AppContext);\n\n  const location = useLocation();\n  const isMobile = useIsMobile();\n\n  const [showSideBar, setShowSideBar] = useState(false);\n\n  if (!faction && location.pathname !== \"/faction-select\") {\n    return <Redirect to=\"/faction-select\" />;\n  }\n\n  if (faction) {\n    return (\n      <Page>\n        <PilotList\n          open={ship ? true : false}\n          ship={ship}\n          onAdd={() => {}}\n          onClose={closePilotsList}\n        />\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          {isMobile ? (\n            <SideBar open={showSideBar} onClose={() => setShowSideBar(false)}>\n              {<ShipList faction={faction.xws} />}\n            </SideBar>\n          ) : (\n            <Grid item style={{ width: 275, minWidth: 275 }}>\n              {<ShipList faction={faction.xws} />}\n            </Grid>\n          )}\n\n          <Grid item style={{ width: \"100%\" }}>\n            <>\n              {isMobile && (\n                <Button onClick={() => setShowSideBar(true)}>Ships</Button>\n              )}\n              <BuilderCard />\n            </>\n          </Grid>\n        </Grid>\n      </Page>\n    );\n  }\n};\n","import { useMediaQuery } from \"@material-ui/core\";\n\nexport const useIsMobile = () => useMediaQuery(\"(max-width:600px)\");\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport CssBaseLine from \"@material-ui/core/CssBaseline\";\nimport { Theme } from \"./theme\";\nimport { FactionSelect } from \"./routes/faction-select\";\nimport { SquadBuild } from \"./routes/squad-build\";\nimport { AppContextProvider } from \"./context\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseLine />\n      <AppContextProvider>\n        <Theme>\n          <Switch>\n            <Route path=\"/faction-select\">\n              <FactionSelect />\n            </Route>\n            <Route path=\"/squad-build\">\n              <SquadBuild />\n            </Route>\n            <Route path=\"/\">\n              <Redirect to=\"/faction-select\" />\n            </Route>\n          </Switch>\n        </Theme>\n      </AppContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    {console.log(process.env.PUBLIC_URL)}\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/SWZ01_logo.19be28cc.png\";"],"sourceRoot":""}